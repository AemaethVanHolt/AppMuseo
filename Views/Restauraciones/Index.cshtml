@model IEnumerable<AppMuseo.Models.Obra>
@{
    ViewData["Title"] = "Obras en Restauración";
    ViewData["ActivePage"] = "Restauraciones";
    var esAdministrador = User.IsInRole("Administrador");
}

<link rel="stylesheet" href="~/css/restauraciones.css" />

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="restauracion-titulo">@ViewData["Title"]</h1>
        @if (esAdministrador)
        {
            <a asp-action="Create" class="btn btn-oro">
                <i class="fas fa-plus"></i> Nueva Obra en Restauración
            </a>
        }
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center py-5 bg-dark-50 rounded-3">
            <i class="fas fa-tools fa-4x mb-3 text-muted"></i>
            <h4 class="text-light">No hay obras en restauración</h4>
            <p class="text-muted">@(esAdministrador ? "Comienza agregando una nueva obra al sistema." : "No hay obras actualmente en proceso de restauración.")</p>
            @if (esAdministrador)
            {
                <a asp-action="Create" class="btn btn-oro">
                    <i class="fas fa-plus"></i> Agregar Obra
                </a>
            }
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 obra-card">
                        <div class="obra-imagen-container">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl" class="card-img-top obra-imagen" alt="@item.Titulo" style="object-fit: cover;">
                            }
                            else
                            {
                                <div class="bg-secondary d-flex align-items-center justify-content-center" style="height: 200px;">
                                    <i class="fas fa-image fa-3x text-light-50"></i>
                                </div>
                            }
                            <div class="estado-restauracion">
                                <span class="badge bg-warning text-dark">@Html.DisplayFor(modelItem => item.Estado)</span>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-warning mb-3">@Html.DisplayFor(modelItem => item.Titulo)</h5>
                            <div class="card-text flex-grow-1">
                                <div class="mb-2">
                                    <strong><i class="fas fa-user-edit me-1"></i> Autor:</strong>
                                    <span>@(string.IsNullOrEmpty(item.Autor) ? "No especificado" : item.Autor)</span>
                                </div>
                                <div class="mb-2">
                                    <strong><i class="far fa-calendar-alt me-1"></i> Año:</strong>
                                    <span>@(item.Anio != 0 ? item.Anio.ToString() : "Desconocido")</span>
                                </div>
                                <div class="mb-2">
                                    <strong><i class="fas fa-layer-group me-1"></i> Colección:</strong>
                                    <span>@(item.Coleccion?.Nombre ?? "Sin colección")</span>
                                </div>
                                <div class="mb-2">
                                    <strong><i class="fas fa-map-marker-alt me-1"></i> Ubicación:</strong>
                                    <span>@(string.IsNullOrEmpty(item.UbicacionActual) ? "No especificada" : item.UbicacionActual)</span>
                                </div>
                                <div class="mt-3">
                                    <small class="text-muted">
                                        <i class="far fa-clock me-1"></i> Última actualización: 
                                        @(item.UltimaModificacion != DateTime.MinValue ? item.UltimaModificacion.ToString("dd/MM/yyyy HH:mm") : "Nunca")
                                    </small>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top border-warning-20">
                            <div class="d-flex justify-content-between align-items-center">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="Ver detalles">
                                    <i class="fas fa-eye"></i>
                                </a>
                                @if (esAdministrador)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button class="btn btn-sm btn-outline-danger btn-eliminar" data-id="@item.Id" data-titulo="@item.Titulo" title="Eliminar">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Modal de confirmación de eliminación -->
<div class="modal fade" id="eliminarModal" tabindex="-1" aria-labelledby="eliminarModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-dark text-warning">
                <h5 class="modal-title" id="eliminarModalLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea eliminar la obra <strong id="nombreObra"></strong>?
                <p class="text-danger mt-2"><i class="fas fa-exclamation-triangle me-2"></i>Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="formEliminar" method="post" action="">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Manejar la eliminación de obras
            document.querySelectorAll('.btn-eliminar').forEach(btn => {
                btn.addEventListener('click', function() {
                    const obraId = this.getAttribute('data-id');
                    const obraTitulo = this.getAttribute('data-titulo');
                    confirmarEliminacion(obraId, obraTitulo);
                });
            });

            // Función para mostrar el modal de confirmación
            function confirmarEliminacion(id, titulo) {
                const modalElement = document.getElementById('eliminarModal');
                const modal = new bootstrap.Modal(modalElement);
                
                // Actualizar el contenido del modal
                document.getElementById('nombreObra').textContent = titulo;
                document.getElementById('formEliminar').action = '/Restauraciones/Delete/' + id;
                
                // Mostrar el modal
                modal.show();
                
                // Enfocar el botón de cancelar por defecto
                modalElement.addEventListener('shown.bs.modal', function () {
                    modalElement.querySelector('.btn-secondary').focus();
                });
            }

            // Manejar el envío del formulario de eliminación
            const formEliminar = document.getElementById('formEliminar');
            if (formEliminar) {
                formEliminar.addEventListener('submit', function(e) {
                    e.preventDefault();
                    // Mostrar spinner de carga
                    const submitBtn = this.querySelector('button[type="submit"]');
                    const originalText = submitBtn.innerHTML;
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Eliminando...';
                    
                    // Enviar la solicitud
                    fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: new URLSearchParams(new FormData(this))
                    })
                    .then(response => {
                        if (response.ok) {
                            // Recargar la página después de eliminar
                            window.location.href = window.location.href.split('?')[0] + '?success=La obra ha sido eliminada correctamente';
                        } else {
                            throw new Error('Error al eliminar la obra');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Ocurrió un error al intentar eliminar la obra. Por favor, inténtelo de nuevo.');
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalText;
                    });
                });
            }
            
            // Mostrar mensaje de éxito si existe en la URL
            const urlParams = new URLSearchParams(window.location.search);
            const successMessage = urlParams.get('success');
            if (successMessage) {
                // Crear y mostrar notificación de éxito
                const alertDiv = document.createElement('div');
                alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 end-0 m-3';
                alertDiv.style.zIndex = '1100';
                alertDiv.role = 'alert';
                alertDiv.innerHTML = `
                    ${successMessage}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
                `;
                document.body.appendChild(alertDiv);
                
                // Eliminar el parámetro de la URL sin recargar la página
                const newUrl = window.location.pathname;
                window.history.replaceState({}, document.title, newUrl);
                
                // Ocultar la alerta después de 5 segundos
                setTimeout(() => {
                    const alert = bootstrap.Alert.getOrCreateInstance(alertDiv);
                    alert.close();
                }, 5000);
            }
        });
    </script>
}
