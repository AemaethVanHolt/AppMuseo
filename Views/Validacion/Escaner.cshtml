@{
    ViewData["Title"] = "Escanear Entrada";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .scanner-container {
            max-width: 600px;
            margin: 2rem auto;
            text-align: center;
        }
        
        #qr-reader {
            width: 100%;
            margin: 0 auto;
            border: 2px solid #007bff;
            border-radius: 8px;
            overflow: hidden;
        }
        
        #resultado-validacion {
            margin-top: 2rem;
            padding: 1rem;
            border-radius: 8px;
            display: none;
        }
        
        .resultado-exito {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .resultado-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .info-entrada {
            margin-top: 1rem;
            text-align: left;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 4px;
        }
    </style>
}

<div class="container mt-4">
    <div class="scanner-container">
        <h2>Escanear Entrada</h2>
        <p>Escanea el código QR de la entrada para validarla.</p>
        
        <div id="qr-reader"></div>
        
        <div id="resultado-validacion">
            <h4 id="mensaje-validacion"></h4>
            <div id="info-entrada" class="info-entrada"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>
    <script>
        function onScanSuccess(decodedText, decodedResult) {
            // Detener el escáner después de leer un código
            html5QrcodeScanner.clear();
            
            // Mostrar mensaje de carga
            const resultadoDiv = document.getElementById('resultado-validacion');
            const mensaje = document.getElementById('mensaje-validacion');
            const infoEntrada = document.getElementById('info-entrada');
            
            resultadoDiv.style.display = 'block';
            resultadoDiv.className = '';
            resultadoDiv.classList.add('alert', 'alert-info');
            mensaje.textContent = 'Validando entrada...';
            infoEntrada.innerHTML = '';
            
            // Extraer el ID de la entrada del código QR
            const entradaId = parseInt(decodedText.split('ID: ')[1].split('\n')[0]);
            
            // Validar la entrada
            fetch(`/Validacion/ValidarEntrada/${entradaId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        resultadoDiv.className = '';
                        resultadoDiv.classList.add('alert', 'alert-success');
                        mensaje.textContent = data.message;
                        
                        infoEntrada.innerHTML = `
                            <p><strong>ID:</strong> ${data.entrada.id}</p>
                            <p><strong>Tipo:</strong> ${data.entrada.tipo}</p>
                            <p><strong>Fecha:</strong> ${data.entrada.fecha}</p>
                            <p><strong>Hora:</strong> ${data.entrada.hora}</p>
                            <p><strong>Precio:</strong> ${parseFloat(data.entrada.precio).toFixed(2)} €</p>
                            <p class="text-success"><strong>ESTADO: VALIDADA</strong></p>
                        `;
                    } else {
                        resultadoDiv.className = '';
                        resultadoDiv.classList.add('alert', 'alert-danger');
                        mensaje.textContent = data.message;
                        
                        if (data.entrada) {
                            infoEntrada.innerHTML = `
                                <p><strong>ID:</strong> ${data.entrada.id}</p>
                                <p><strong>Tipo:</strong> ${data.entrada.tipo}</p>
                                <p><strong>Fecha:</strong> ${data.entrada.fecha}</p>
                                <p><strong>Hora:</strong> ${data.entrada.hora}</p>
                                <p><strong>Precio:</strong> ${parseFloat(data.entrada.precio).toFixed(2)} €</p>
                                <p class="text-danger"><strong>ESTADO: YA VALIDADA</strong></p>
                            `;
                        }
                    }
                    
                    // Reiniciar el escáner después de 5 segundos
                    setTimeout(initScanner, 5000);
                })
                .catch(error => {
                    console.error('Error:', error);
                    resultadoDiv.className = '';
                    resultadoDiv.classList.add('alert', 'alert-danger');
                    mensaje.textContent = 'Error al validar la entrada. Intente nuevamente.';
                    infoEntrada.innerHTML = '';
                    
                    // Reiniciar el escáner después de 3 segundos
                    setTimeout(initScanner, 3000);
                });
        }

        function onScanFailure(error) {
            // Manejar el error del escáner
            console.warn(`Error al escanear: ${error}`);
        }
        
        let html5QrcodeScanner;
        
        function initScanner() {
            // Limpiar el escáner anterior si existe
            if (html5QrcodeScanner) {
                const scannerElement = document.getElementById('qr-reader');
                scannerElement.innerHTML = '';
            }
            
            // Inicializar el escáner
            html5QrcodeScanner = new Html5QrcodeScanner(
                "qr-reader",
                { 
                    fps: 10, 
                    qrbox: { width: 250, height: 250 },
                    aspectRatio: 1.0
                },
                false
            );
            
            // Limpiar el resultado anterior
            document.getElementById('resultado-validacion').style.display = 'none';
            
            // Iniciar el escáner
            html5QrcodeScanner.render(onScanSuccess, onScanFailure);
        }
        
        // Inicializar el escáner cuando el documento esté listo
        document.addEventListener('DOMContentLoaded', initScanner);
    </script>
}
