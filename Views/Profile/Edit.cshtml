@model AppMuseo.Models.EditProfileViewModel

@{
    ViewData["Title"] = Model.Id == null ? "Mi Perfil" : "Editar Usuario";
    var isAdmin = User.IsInRole("Administrator");
}

<div class="container-fluid p-0">
    <div class="bg-dark bg-opacity-75 text-white p-4">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="m-0">@ViewData["Title"]</h1>
                <button type="button" onclick="window.history.back()" class="btn btn-outline-light rounded-pill">
                    <i class="fas fa-arrow-left me-2"></i>Volver
                </button>
            </div>
        </div>
    </div>

    <div class="container py-5">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Edit" method="post" enctype="multipart/form-data" class="profile-edit-form">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Activo" id="activoHidden" />
            
            <div class="row">
                <!-- Columna de la foto de perfil -->
                <div class="col-md-3 text-center mb-4">
                    <div class="d-flex flex-column align-items-center">
                        <div class="position-relative mb-3">
                            <div id="imagePreview" class="mx-auto" style="width: 200px; height: 200px; overflow: hidden; border-radius: 50%; border: 3px solid #fff;">
                                @if (!string.IsNullOrEmpty(Model.FotoPerfilUrl))
                                {
                                    <img src="@Url.Content(Model.FotoPerfilUrl)" class="img-fluid w-100 h-100" style="object-fit: cover;" id="profileImage" />
                                }
                                else
                                {
                                    <div class="w-100 h-100 bg-secondary d-flex align-items-center justify-content-center">
                                        <i class="fas fa-user text-white" style="font-size: 5rem;"></i>
                                    </div>
                                }
                            </div>
                            <div class="position-relative" style="width: 100%; height: 100%;">
                                <label for="FotoPerfil" class="btn btn-light rounded-circle position-absolute" style="bottom: 10px; right: 10px; width: 40px; height: 40px; line-height: 1; padding: 0.5rem; cursor: pointer;">
                                    <i class="fas fa-camera"></i>
                                </label>
                                <input type="file" asp-for="FotoPerfil" id="FotoPerfil" name="FotoPerfil" class="d-none" accept="image/*" onchange="previewImage(this)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <span asp-validation-for="FotoPerfil" class="text-danger d-block"></span>
                        </div>
                    </div> <!-- Cierre de d-flex flex-column -->

              <!-- Estado del usuario (solo para administradores) -->
                    @if (Model.PuedeDesactivar)
                    {
                        <div class="form-check form-switch mt-4 d-flex justify-content-center align-items-center">
                            <input class="form-check-input" type="checkbox" role="switch" id="Activo" asp-for="Activo" onchange="updateStatusText(this)">
                            <label class="form-check-label ms-2" for="Activo" id="statusText">
                                @(Model.Activo ? "Activo" : "Inactivo")
                            </label>
                        </div>
                        <div class="text-center mt-2">
                            <small class="text-muted">Estado actual: <span id="statusIndicator" class="badge @(Model.Activo ? "bg-success" : "bg-danger")">@(Model.Activo ? "Activo" : "Inactivo")</span></small>
                        </div>
                    }
                    else if (Model.PuedeEditarRol)
                    {
                        <div class="mt-4 text-center">
                            <span class="badge @(Model.Activo ? "bg-success" : "bg-danger") p-2">
                                @(Model.Activo ? "Activo" : "Inactivo")
                            </span>
                        </div>
                    }
                </div>

                <!-- Columna de los datos del usuario -->
                <div class="col-md-9">
                    <div class="row g-3">
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Nombre" class="form-label"></label>
                                    <input asp-for="Nombre" class="form-control" />
                                    <span asp-validation-for="Nombre" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Apellidos" class="form-label"></label>
                                    <input asp-for="Apellidos" class="form-control" />
                                    <span asp-validation-for="Apellidos" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Telefono" class="form-label"></label>
                            <input asp-for="Telefono" class="form-control" />
                            <span asp-validation-for="Telefono" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Direccion" class="form-label"></label>
                            <input asp-for="Direccion" class="form-control" />
                            <span asp-validation-for="Direccion" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Pais" class="form-label"></label>
                            <input asp-for="Pais" class="form-control" />
                            <span asp-validation-for="Pais" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="FechaNacimiento" class="form-label"></label>
                            <input asp-for="FechaNacimiento" type="date" class="form-control" />
                            <span asp-validation-for="FechaNacimiento" class="text-danger"></span>
                        </div>

                        <!-- Informaci칩n de cuenta -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5>Informaci칩n de la cuenta</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">@Html.DisplayNameFor(m => m.FechaCreacion)</label>
                                            <input type="text" class="form-control" value="@Model.FechaCreacion.ToString("g")" readonly />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">@Html.DisplayNameFor(m => m.UltimoAcceso)</label>
                                            <input type="text" class="form-control" value="@(Model.UltimoAcceso?.ToString("g") ?? "Nunca")" readonly />
                                        </div>
                                    </div>
                                </div>

                                <!-- Cambio de contrase침a -->
                                <div class="border-top pt-3 mt-3">
                                    <h6>Cambiar contrase침a</h6>
                                    <div class="mb-3">
                                        <label asp-for="CurrentPassword" class="form-label"></label>
                                        <input asp-for="CurrentPassword" class="form-control" />
                                        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="NewPassword" class="form-label"></label>
                                        <input asp-for="NewPassword" class="form-control" />
                                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="ConfirmPassword" class="form-label"></label>
                                        <input asp-for="ConfirmPassword" class="form-control" />
                                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Rol y estado (solo para administradores) -->
                        @if (User.IsInRole("Administrador") && !Model.EsMismoUsuario)
                        {
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h5>Administraci칩n de usuario</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label asp-for="Rol" class="form-label"></label>
                                        <select asp-for="Rol" class="form-select">
                                            <option value="">Seleccione un rol</option>
                                            @foreach (var role in Model.RolesDisponibles)
                                            {
                                                <option value="@role">@role</option>
                                            }
                                        </select>
                                        <span asp-validation-for="Rol" class="text-danger"></span>
                                    </div>

                                    <div class="form-check form-switch mb-3">
                                        <input class="form-check-input" type="checkbox" asp-for="Activo" id="activoSwitch">
                                        <label class="form-check-label" for="activoSwitch">@Html.DisplayNameFor(m => m.Activo)</label>
                                    </div>
                                </div>
                            </div>
                        }
                        else if (User.IsInRole("Administrador") && Model.EsMismoUsuario)
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i> 
                                No puedes cambiar tu propio rol o estado. Otro administrador debe hacerlo por ti.
                            </div>
                        }

                    </div> <!-- Cierre de row g-3 -->
                </div> <!-- Cierre de col-md-9 -->
            </div> <!-- Cierre de row principal -->
            
            <!-- Botones de acci칩n -->
            <div class="row mt-4">
                <div class="col-12 text-center">
                    <button type="submit" class="btn btn-primary btn-lg me-3">
                        <i class="fas fa-save me-2"></i>Guardar Cambios
                    </button>
                    <a href="/" class="btn btn-secondary btn-lg">
                        <i class="fas fa-times me-2"></i>Cancelar
                    </a>
                </div>
            </div>
        </form>
    </div> <!-- Cierre de container py-5 -->
</div> <!-- Cierre de container-fluid -->

@section Styles {
    <style>
        /* Main container for the profile edit page */
        .container.py-5 {
            background-color: #191c1f;
            color: #ffffff;
            min-height: calc(100vh - 200px);
            margin-top: 20px;
        }
        
        /* Profile form specific styles */
        .profile-edit-form {
            background-color: #191c1f;
            color: #ffffff;
            border: 3px solid #ffffff;
            border-radius: 15px;
            padding: 2rem;
        }
        
        /* Form elements within the profile edit form */
        .profile-edit-form .form-control,
        .profile-edit-form .form-select {
            background-color: #191c1f;
            color: #ffffff;
            border: 2px solid #ffffff;
            border-radius: 10px;
            padding: 12px 15px;
        }
        
        .profile-edit-form .form-control:focus,
        .profile-edit-form .form-select:focus {
            background-color: #191c1f;
            color: #ffffff;
            border-color: #ffffff;
            box-shadow: 0 0 0 0.25rem rgba(255, 255, 255, 0.25);
        }
        
        .profile-edit-form .form-control::placeholder {
            color: #cccccc;
        }
        
        .profile-edit-form .form-label {
            color: #ffffff;
            font-weight: 500;
        }
        
        /* Cards within the profile form */
        .profile-edit-form .card {
            background-color: #191c1f;
            border: 2px solid #ffffff;
            border-radius: 15px;
        }
        
        .profile-edit-form .card-header {
            background-color: #1a1a1a;
            color: #ffffff;
            border-bottom: 2px solid #ffffff;
            border-radius: 13px 13px 0 0;
        }
        
        .profile-edit-form .card-body {
            background-color: #191c1f;
            color: #ffffff;
        }
        
        /* Buttons within the profile form */
        .profile-edit-form .btn-primary {
            background-color: #ffffff;
            color: #000000;
            border: 2px solid #ffffff;
            border-radius: 10px;
            font-weight: 600;
            padding: 12px 25px;
        }
        
        .profile-edit-form .btn-primary:hover {
            background-color: #f0f0f0;
            color: #000000;
            border-color: #f0f0f0;
        }
        
        .profile-edit-form .btn-secondary {
            background-color: #000000;
            color: #ffffff;
            border: 2px solid #ffffff;
            border-radius: 10px;
            font-weight: 600;
            padding: 12px 25px;
        }
        
        .profile-edit-form .btn-secondary:hover {
            background-color: #191c1f;
            color: #ffffff;
            border-color: #ffffff;
        }
        
        .profile-edit-form .btn-light {
            background-color: #ffffff;
            color: #000000;
            border: 2px solid #ffffff;
            border-radius: 50%;
        }
        
        .profile-edit-form .btn-light:hover {
            background-color: #f0f0f0;
            color: #000000;
        }
        
        /* Form check elements */
        .profile-edit-form .form-check-input {
            background-color: #191c1f;
            border: 2px solid #ffffff;
        }
        
        .profile-edit-form .form-check-input:checked {
            background-color: #ffffff;
            border-color: #ffffff;
        }
        
        .profile-edit-form .form-check-label {
            color: #ffffff;
        }
        
        /* Alerts within the profile form */
        .profile-edit-form .alert-success,
        .profile-edit-form .alert-danger,
        .profile-edit-form .alert-info {
            background-color: #2d2d2d;
            color: #ffffff;
            border: 2px solid #ffffff;
            border-radius: 10px;
        }
        
        .profile-edit-form .text-danger {
            color: #ff6b6b;
        }
        
        /* Imagen del usuario */
        .profile-edit-form .rounded-circle {
            border: 3px solid #ffffff;
        }
        
        .profile-edit-form .bg-secondary {
            background-color: #6c757d;
            border: 2px solid #ffffff !important;
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
    // Funci칩n para actualizar el texto del estado cuando se cambia el interruptor
    function updateStatusText(checkbox) {
        var statusText = document.getElementById('statusText');
        var statusIndicator = document.getElementById('statusIndicator');
        var activoHidden = document.getElementById('activoHidden');
        
        if (statusText && statusIndicator && activoHidden) {
            if (checkbox.checked) {
                statusText.textContent = 'Activo';
                statusIndicator.textContent = 'Activo';
                statusIndicator.className = 'badge bg-success';
                activoHidden.value = 'true';
            } else {
                statusText.textContent = 'Inactivo';
                statusIndicator.textContent = 'Inactivo';
                statusIndicator.className = 'badge bg-danger';
                activoHidden.value = 'false';
            }
        }
    }

    // Funci칩n para previsualizar la imagen seleccionada
    function previewImage(input) {
        console.log('Archivo seleccionado:', input.files[0]);
        
        var previewContainer = document.getElementById('imagePreview');
        if (!previewContainer) {
            console.error('No se encontr칩 el contenedor de previsualizaci칩n');
            return;
        }
        
        var defaultIcon = previewContainer.querySelector('.fa-user');
        
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            
            reader.onload = function(e) {
                console.log('Imagen cargada correctamente');
                
                // Crear o actualizar la imagen de vista previa
                var previewImg = document.getElementById('profileImage');
                
                if (!previewImg) {
                    // Si no existe, crear la imagen
                    previewImg = document.createElement('img');
                    previewImg.id = 'profileImage';
                    previewImg.className = 'img-fluid w-100 h-100';
                    previewImg.style.objectFit = 'cover';
                    previewContainer.innerHTML = '';
                    previewContainer.appendChild(previewImg);
                }
                
                // Eliminar el 칤cono por defecto si existe
                if (defaultIcon && defaultIcon.parentNode) {
                    defaultIcon.parentNode.remove();
                }
                
                // Establecer la nueva imagen
                previewImg.src = e.target.result;
                
                // Forzar la visualizaci칩n de la imagen
                previewImg.style.display = 'block';
            };
            
            reader.onerror = function(error) {
                console.error('Error al leer el archivo:', error);
                alert('Error al cargar la imagen. Por favor, int칠ntalo de nuevo.');
            };
            
            // Leer el archivo como URL de datos
            reader.readAsDataURL(input.files[0]);
        } else {
            console.warn('No se seleccion칩 ning칰n archivo o hubo un error');
        }
    }
    
    // Inicializaci칩n cuando el documento est칠 listo
    document.addEventListener('DOMContentLoaded', function() {
        // Configurar el interruptor de estado
        const toggle = document.getElementById('Activo');
        if (toggle) {
            toggle.addEventListener('change', function() {
                const label = this.nextElementSibling;
                if (label) {
                    label.textContent = this.checked ? 'Activo' : 'Inactivo';
                }
            });
        }
        
        // Inicializar la previsualizaci칩n si ya hay una imagen
        const profileImage = document.getElementById('profileImage');
        if (profileImage && profileImage.complete) {
            profileImage.style.display = 'block';
        }
    });
    </script>
}
