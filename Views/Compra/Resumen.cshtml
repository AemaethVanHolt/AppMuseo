@model Dictionary<string, object>
@{
    ViewData["Title"] = "Resumen de Compra";
    
    var precioUnitario = (decimal)Model["PrecioUnitario"];
    var extrasDisponibles = Model["ExtrasDisponibles"] as Dictionary<string, decimal>;
    var extrasSeleccionados = Model["ExtrasSeleccionados"] as List<string> ?? new List<string>();
}

<div class="container mt-4">
    <h1 class="text-center mb-4">Completa tu Compra</h1>
    
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-dark text-white">
                <div class="card-body">
                    <form asp-action="ConfirmarCompra" method="post" id="formularioCompra">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="tipoEntrada" value="@Model["TipoEntrada"]" />
                        <input type="hidden" name="precioUnitario" value="@precioUnitario" />
                        
                        <h4 class="card-title text-warning mb-4">Detalles de la compra</h4>
                        
                        <div class="mb-4">
                            <h5>Tipo de entrada: <span class="text-warning">@Model["TipoEntrada"]</span></h5>
                            <p class="mb-1">Precio unitario: <span class="text-warning">@precioUnitario.ToString("0.00") €</span></p>
                            
                            <div class="form-group mt-3">
                                <label for="cantidad" class="form-label">Cantidad:</label>
                                <input type="number" class="form-control w-25" id="cantidad" name="cantidad" min="1" value="1" required>
                            </div>
                            
                            <hr class="bg-warning my-4">
                            
                            <h5 class="mb-3">Extras disponibles:</h5>
                            <div class="row">
                                @foreach (var extra in extrasDisponibles)
                                {
                                    var isChecked = extrasSeleccionados.Contains(extra.Key);
                                    <div class="col-md-6 mb-3">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="extras" value="@extra.Key" id="extra-@extra.Key" @(isChecked ? "checked" : "")>
                                            <label class="form-check-label d-flex justify-content-between" for="extra-@extra.Key">
                                                <span>@extra.Key</span>
                                                <span class="text-warning">+@extra.Value.ToString("0.00") €</span>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                            
                            <hr class="bg-warning my-4">
                            
                            <div class="d-flex justify-content-between align-items-center mt-4">
                                <h4 class="mb-0">Total:</h4>
                                <h3 class="text-warning mb-0" id="total">@precioUnitario.ToString("0.00") €</h3>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a href="/Taquilla" class="btn btn-outline-warning">
                                <i class="fas fa-arrow-left me-2"></i>Volver
                            </a>
                            <button type="submit" class="btn btn-warning">
                                Confirmar Compra <i class="fas fa-arrow-right ms-2"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cantidadInput = document.getElementById('cantidad');
            const checkboxes = document.querySelectorAll('input[type="checkbox"][name="extras"]');
            const totalElement = document.getElementById('total');
            
            // Asegurarse de que el precio unitario sea un número
            const precioUnitario = parseFloat('@precioUnitario'.replace(',', '.')) || 0;
            
            // Crear objeto de precios de extras
            const preciosExtras = {
                @foreach (var extra in extrasDisponibles)
                {
                    <text>'@extra.Key': @extra.Value.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture),</text>
                }
            };
            
            function calcularTotal() {
                // Obtener cantidad y asegurarse de que sea un número válido
                let cantidad = parseInt(cantidadInput.value) || 0;
                if (cantidad < 1) cantidad = 1;
                
                // Calcular subtotal de entradas
                let subtotalEntradas = precioUnitario * cantidad;
                let subtotalExtras = 0;
                
                // Calcular total de extras
                checkboxes.forEach(checkbox => {
                    if (checkbox.checked) {
                        const extra = checkbox.value;
                        subtotalExtras += (preciosExtras[extra] || 0) * cantidad;
                    }
                });
                
                // Calcular total general
                const total = subtotalEntradas + subtotalExtras;
                
                // Mostrar el total formateado con 2 decimales y separador de miles
                totalElement.textContent = total.toLocaleString('es-ES', {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                }) + ' €';
            }
            
            cantidadInput.addEventListener('change', calcularTotal);
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', calcularTotal);
            });
            
            // Validación del formulario
            document.getElementById('formularioCompra').addEventListener('submit', function(e) {
                const cantidad = parseInt(cantidadInput.value) || 0;
                if (cantidad < 1) {
                    e.preventDefault();
                    alert('Por favor, introduce una cantidad válida.');
                    cantidadInput.focus();
                }
            });
        });
    </script>
}

@section Styles {
    <style>
        body {
            background-color: #121212;
            color: #e0e0e0;
        }
        
        .card {
            border: 1px solid rgba(255, 215, 0, 0.3);
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }
        
        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
            color: #000;
            font-weight: 600;
        }
        
        .btn-outline-warning {
            color: #ffc107;
            border-color: #ffc107;
        }
        
        .btn-outline-warning:hover {
            background-color: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }
        
        hr.bg-warning {
            height: 2px;
            opacity: 0.3;
        }
    </style>
}
